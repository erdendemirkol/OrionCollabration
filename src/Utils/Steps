Team Collaboration

Team Lead or one selected person: (Set up)

    Create a new java project and enable git
    Create a .gitignore file and add the main folders to ignore
        files: out, *.iml, .idea
    Create a package called utils
    Create a class called MainUtils
    Commit the .gitignore and MainUtils files
    Create the remote repository by sharing the project
    Create a new branch from master called develop on the remote repository (on github)
    Invite all team members by going to project settings -> manage access

Other Team Members:

    Go to email or GitHub and accept invite to collaborate with the new repository
    On the remote repository page find the code button and copy the given link
    Use the given link to clone the project

Now there is a remote repository and everyone has the project locally

--> After cloning open the git log. right click on the origin develop branch and checkout. This will create a local develop branch

Steps to repeat:

    Update local project with changes from other team members
    In the local repositories create a new branch from the develop branch
        - for this practice use your name for each personal branch
    Makes some changes by adding files or updating a file (work in separate files to avoid conflicts)
    Commit local changes and push to your origin branch (DO NOT PUSH TO DEVELOP OR MASTER BRANCH)
    On GitHub create a pull request to merge the changes from your branch to the develop branch.
    Assign a team member to review and approve

            -****************** If you are assigned a pull request view the commits of your team members. Discuss and if there is no problem approve the pull request

            -****************** Pick assignments of who will review your PR ahead of time, and make sure everyone is assigned so everyone in the group is able to practice both parts
Every team member should go through the flow with the team to do some basic practice right now. When projects for automation start you will need to use git on top of the testing you will need to do, so practice the core git now without worrying about the other parts.

Whole group:

    When you feel there is enough commits made to the develop branch make a pull request merge develop into the master branch
    Everyone should update their projects before making any more changes
    Repeat all of the above as many times as needed

